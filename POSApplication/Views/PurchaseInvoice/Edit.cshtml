@model POSApplication.Models.PurchaseInvoiceMa

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">User Information</h5>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
              
                <input type="hidden" id="Id" value="@Model.Id">
                  <div class="row">

                    <div class="col-lg-4">
                        <div class="form-group form-group-xs">
                            @Html.Label("Supplier", new { @class = "control-label col-lg-4" })
                            <div class="col-lg-8">
                                @Html.DropDownList("SupplierId", null, "--Select--", htmlAttributes: new { @class = "form-control select2 input-xs" })

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-5">
                        <div class="form-group form-group-xs">
                            @Html.Label("Company Name", new { @class = "control-label col-lg-4" })
                            <div class="col-lg-7">
                                @Html.TextBox("CompanyName", null, new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group form-group-xs">
                            @Html.Label("Phone", new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBox("Phone", null, new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="form-group form-group-xs">
                            @Html.Label("Email", new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBox("Email", null, new { @class = "form-control", @disabled = "disabled" })

                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group form-group-xs">
                            @Html.Label("Date", new { @class = "control-label col-lg-5" })
                            <div class="col-lg-7">
                                @Html.TextBox("Date", "", new { @class = "form-control Datepicker", @Value = @DateTime.Now.ToShortDateString() })

                            </div>
                        </div>
                    </div>

                </div>

            </div>

        }
        @*//----------Details Table--------------//*@


        <div class="details well" style="border: 1px solid white;">
            <div class="jumbotron" style="padding:10px;">


                <div class="table-responsive scrolling">
                    <table class="Resource-list table table-bordered TableItemDetails" id="TableDetails">
                        <thead>
                            <tr class="bg-blue-gradient">

                                <th class="col-sm-1">Sl No</th>
                                <th class="col-lg-1">Product Category</th>
                                <th class="col-lg-1">Product Name</th>
                                <th class="col-lg-1">Qty  </th>
                                <th class="col-lg-1">Purchase Prize</th>

                                <th class="col-md-1">Amount</th>
                                <th class="col-lg-1">Action</th>
                            </tr>

                        </thead>
                        <tbody>
                            <tr>
                                <td><button type="button" class="btn btn-success btn-rounded btn-sm" id="btnAddRow"><span class="glyphicon glyphicon-plus"></span> Add Row</button> </td>
                                @*<td></td>*@
                            </tr>
                        </tbody>
                        <tfoot>

                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td colspan="1" style="text-align:right;  padding-right:20px;" height="30px;">&nbsp; Total</td>
                                <td>
                                    @*<label class="text-bold total_amount" style="padding-left:10px;"></label>*@
                                    <input type="text" name="TotalAmount" class="bg-primary text-white" id="TotalAmount" readonly />
                                </td>

                        </tfoot>
                    </table>
                </div>
            </div>
        </div>

        @*//-------------End Details table----------------//*@
        <br>
        <div class="form-group">
            <div class="col-md-offset-4 col-lg-10">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning" })
                <input type="button" id="Save" value="Save" class="btn btn-success" />
            </div>
        </div>

    </div>





</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <link href="~/Content/plugins/datepicker/datepicker3.css" rel="stylesheet" />
    <script src="~/Content/plugins/datepicker/bootstrap-datepicker.js"></script>
    <script type="text/javascript">

        $('document').ready(function ()
        {
            $('.Datepicker').datepicker({
                format: 'dd/mm/yyyy',
                todayHighlight: true,
                todayBtn: true,
                autoclose: true
            });
            LoadSavedData();
            $(".select2").select2();
            $("#Save").attr("disabled", "disabled");

        });
        //------------Load Saved Data--------//
        var flag = false;

        function LoadSavedData() {
            var Id = $("#Id").val();
            flag = true;



            $.ajax({
                type: "post",
                url: "/PurchaseInvoice/GetSavedData",
                datatype: "json",
                data: { Id: Id },
                traditional: true,
                success: function (data) {
                    var si = 0;
                    for (var i = 0; i < data.length; i++)
                    {

                        var si = i + 1;
                        var newRow = jQuery('<tr>'

               + '<td><input type="text" name="SlNo" value="' + si + '" class="form-control  input-sm SlNo" readonly/></td>'

               + '<td><select name="ProductCategory" class="ProductCategory form-control input-sm select2"><option value="' + data[i].ProductCategoryId + '">' + data[i].ProductCatagoryName + '</option>  </select></td>'
                  + '<td><select name="ProductName" class="ProductName col-lg-1 form-control input-sm select2"><option value="' + data[i].ProductId + '">' + data[i].ProductName + '</option> </select></td>'

               + '<td><input type="text" name="Qty" value="' + data[i].Qty + '"   class="form-control input-sm Qty"/></td>'
               + '<td><input type="text" name="PurchasePrize" value="' + data[i].PurchasePrize + '" class="form-control input-sm PurchasePrize"/></td>'
                + '<td><input type="text" name="Amount" value="' + data[i].Amount + '" class="form-control input-sm Amount" readonly/></td>'



              + '<td><button onclick="RemoveRow(this)" type="button" class="btn btn-xs labeled btn-danger"><i class="glyphicon glyphicon-remove"></i></td></tr>');
                        jQuery('table.TableItemDetails tbody').find('tr:last').before(newRow);


                    }
                   
                 

                    GetProductCatagoryName();
                    GetProductName();

                    CalculateAmount();

                    //$(".select2").select2();


                    var lent = $('table.TableItemDetails tbody tr').length - 1;
                    if (lent > 0) {
                        $("#Save").removeAttr('disabled');
                    }
                    //Get_AccommodationBlocksId();

                }



            });


        }











        //-----PO Number On Change-----//
        $('#SupplierId').change(function () {

            var SupplierId = $(this).val();

            $.ajax({
                url: "/PurchaseInvoice/GetSupplierRelatedData",
                type: "POST",
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: {
                    SupplierId: SupplierId

                },
                success: function (result) {
                    console.log(result);


                    $("#CompanyName").val(result.CompanyName);

                    $("#Phone").val(result.Phone);
                    $("#Email").val(result.Email);



                },
                error: function () {
                    alert('Something went wrong!');
                }

            });



        });

        var SlNo = 0;
        var count = 0;
        //--------------Add New Row ----- Details Table----
        $('#btnAddRow').click(function ()
        {


            if (count > 0 || flag==true) {

                var newserial = 0;



                $('table.TableItemDetails tbody .SlNo').each(function (index) {
                    newserial = 0;

                    newserial = newserial + index * 1 + 1;


                });

                SlNo = newserial;
            }



            AddNewRow();
            var lent = $('table.TableItemDetails tbody tr').length - 1;
            if (lent > 0) {
                $("#Save").removeAttr('disabled');
            }
        });

        function AddNewRow() {

            SlNo++;


            var newRow = jQuery('<tr>'

                + '<td><input type="text" name="SlNo" value="' + SlNo + '" class="form-control  input-sm SlNo" readonly/></td>'

                + '<td><select name="ProductCategory" class="ProductCategory form-control input-sm select2"></select></td>'
                   + '<td><select name="ProductName" class="ProductName col-lg-1 form-control input-sm select2"></select></td>'

                + '<td><input type="text" name="Qty"   class="form-control input-sm Qty"/></td>'
                + '<td><input type="text" name="PurchasePrize" class="form-control input-sm PurchasePrize"/></td>'
                 + '<td><input type="text" name="Amount" class="form-control input-sm Amount" readonly/></td>'



               + '<td><button onclick="RemoveRow(this)" type="button" class="btn btn-xs labeled btn-danger"><i class="glyphicon glyphicon-remove"></i></td></tr>');
            jQuery('table.TableItemDetails tbody').find('tr:last').before(newRow);



            GetProductCatagoryName();
            GetProductName();
            //Get_Boarding_Status();
        }
        //----End---------Add New Row------------------//
        // LOad Product Catagory For Addd new Row-----------//

        function GetProductCatagoryName()
        {

            $.ajax({
                url: "/PurchaseInvoice/GetProductCatagoryName",
                type: "post",
                data: {},
                dataType: "json",
                async:false,
                success: function (data) {

                    $(".ProductCategory").append(new Option("Select", ""));



                    $.each(data, function (i, item) {

                        var optionhtml = '<option value="' +
                            data[i].Value + '">' + data[i].Text + '</option>';
                        $(".ProductCategory").append(optionhtml);
                    });



                },

            });


        }
        function GetProductName() {
            $.ajax({
                url: "/PurchaseInvoice/GetProductName",
                type: "post",
                data: {},
                dataType: "json",
                async: false,
                success: function (data) {
                    //$(".ProductName").empty();
                    $(".ProductName").append(new Option("Select", ""));



                    $.each(data, function (i, item) {

                        var optionhtml = '<option value="' +
                            data[i].Value + '">' + data[i].Text + '</option>';
                        $(".ProductName").append(optionhtml);
                    });

                    $(".select2").select2({ width: '100%' });

                },

            });


        }

        //------- Load Product Name On Change Of Product catagory======//

        $('table.TableItemDetails tbody').on('change', '.ProductCategory', function ()
        {

            var ProductCategoryId = $(this).val();


            var Currentrow = $(this).closest('tr');

            CurrentRowIndex = $(this).closest('tr').index();

            if (IsExist(ProductCategoryId, CurrentRowIndex) == true) {
                Swal.fire({
                    position: 'top',
                    icon: 'error',
                    title: 'This item is Exists in Previous Row'
                    //text: 'This item is Exists in Previous Row',

                })



                $(this).empty();
                //$('table.TableItemDetails tbody tr').eq(CurrentRowIndex).find(".ExtraItemInformationId").empty();

                GetProductCatagoryName();
            }
            else {


                $.ajax({
                    url: "/PurchaseInvoice/GetProductByCatagoryId",
                    type: "POST",
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    data: {
                        ProductCategoryId: ProductCategoryId
                    },
                    success: function (data)
                    {
                        if (data == false) {
                            Swal.fire({
                                position: 'top',
                                icon: 'error',
                                title: 'Please Select any one'

                            })

                        }
                        Currentrow.find(".ProductName").empty();
                        Currentrow.find(".ProductName").append(new Option("Select", ""));


                        $.each(data, function (i, item) {

                            var optionhtml = '<option value="' +
                                data[i].Value + '">' + data[i].Text + '</option>';
                            Currentrow.find(".ProductName").append(optionhtml);
                        });

                        $(".select2").select2({ width: '100%' });



                    },
                    error: function () {
                        alert('Something went wrong!');
                    }

                });

            }

        });
        //-----End-------   //------- Load Product Name On Change Of Product catagory======//

        //------------- Check The previous Item Is Exist Pr Not----------//
        function IsExist(id, CurrentRowIndex) {

            var currentIndex = CurrentRowIndex;

            $('table.TableItemDetails tbody .ProductCategory').each(function (i, item) {



                if (currentIndex == i) {

                    isValid = false;
                    return true;
                }
                else if (item.value == id) {

                    isValid = true;
                    return false;
                }


            });
            return isValid;
        }







        //-------End--------------------///

        //--------------Load Product Prize on Change Product Name------------//

        $('table.TableItemDetails tbody').on('change', '.ProductName', function () {

            var ProductId = $(this).val();



            var Currentrow = $(this).closest('tr');
            $.ajax({
                url: "/PurchaseInvoice/GetPrizeByProductId",
                type: "POST",
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: { ProductId: ProductId },
                success: function (data) {
                    Currentrow.find('input.PurchasePrize').val(data.PurchasePrize);

                    //CalculateTotal();
                },
                error: function () {
                    alert('Something went wrong!');
                }


            });

        });
        //---------------- Get Amount By On change Quanttity=========//
        $('table.TableItemDetails tbody').on('change', '.Qty', function () {


            var Currentrow = $(this).closest('tr');


            var Quantity = $(this).val();


            var prize = Currentrow.find('.PurchasePrize').val();

            var Amount = Quantity * 1 * prize * 1;

            Currentrow.find('input.Amount').val(Amount);


            CalculateAmount();

        });
      function  CalculateAmount()
        {
          var sumAmount = 0;
          $("table.TableItemDetails tbody .Amount").each(function () {
              sumAmount = sumAmount * 1 + $(this).val() * 1;
          });

          $('#TotalAmount').val(sumAmount);

      }
        //------------Remove Details Row-------//
      function RemoveRow(e) {
          count++;


          var currRowIndex = $(e).closest('tr').index() + 1;
          $(e).parent().parent().remove();

          //----------Update Serila Number------------//

          $('table.TableItemDetails tbody .SlNo').each(function (index) {


              $(this).val(index + 1);


          });



          CalculateAmount();
      }
        //-------------Start Save-------------//

      $('#Save').click(function () {

          if ($('#SupplierId').val() == "") {
              Swal.fire({
                  position: 'top',
                  icon: 'error',
                  title: 'The Supplier Name is Reqired'

              })

              $('#SupplierId').focus();
          }



          else if (CheckDetailData() == true)
          {
              SaveData();
          }


      });
      function CheckDetailData() {
          var totRow = $('.TableItemDetails tbody tr').length - 1;
          //alert(totRow);
          for (var i = 0; i < totRow; i++)
          {

              if ($('Table.TableItemDetails tbody tr').eq(i).find("select.ProductCategory").val() == "") {
                  Swal.fire({
                      position: 'top',
                      icon: 'error',
                      title: 'The Product Category is Reqired'

                  });
                  return false;
              }
              else if ($('Table.TableItemDetails tbody tr').eq(i).find("input.ProductName").val() == "") {
                  Swal.fire({
                      position: 'top',
                      icon: 'error',
                      title: 'The Product Name is Reqired'

                  });
                  return false;
              }
              else if ($('Table.TableItemDetails tbody tr').eq(i).find("input.Qty").val() == "") {
                  Swal.fire({
                      position: 'top',
                      icon: 'error',
                      title: 'The Quantity is Reqired'

                  });
                  return false;
              }


          }
          return true;
      }

      function SaveData() {

          var SupplierId = $('#SupplierId').val();
          var CompanyName = $('#CompanyName').val();
          var Phone = $('#Phone').val();
          var Email = $('#Email').val();
          var Date = $('#Date').val();


          var ProductCategory = document.getElementsByName("ProductCategory");
          var ProductName = document.getElementsByName("ProductName");
          var Qty = document.getElementsByName("Qty");
          var PurchasePrize = document.getElementsByName("PurchasePrize");
          var Amount = document.getElementsByName("Amount");




          var DetailsValue = [];
          var Id = $("#Id").val();

          for (var i = 0; i < ProductCategory.length; i++)
          {

              DetailsValue.push({
                  PurchaseInvoiceMasId: Id,
                  ProductCategoryId: ProductCategory[i].value,
                  ProductId: ProductName[i].value,
                  Quantity: Qty[i].value,
                  PurchasePrize: PurchasePrize[i].value,
                  Amount: Amount[i].value
              });
          }
          console.log(DetailsValue);
          $.ajax({
              url: "/PurchaseInvoice/UpdatePurchaseInvoice",
              type: "POST",
              dataType: 'json',
              contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
              data: {

                  PurchaseInvoicedDetails: DetailsValue,
                  SupplierId: SupplierId,
                  Id: Id,
                  CompanyName: CompanyName,
                  Phone: Phone,
                  Email: Email,
                  Date: Date,


              },
              success: function (result) {
                  $("#Save").removeAttr("disabled");
                  if (result.flag == true) {
                      Swal.fire({
                          position: 'top',
                          icon: 'success',
                          title: 'Successfully Saved!',
                          showConfirmButton: true,
                      }).then((result) => {
                          if (result.value) {
                              window.location = "/PurchaseInvoice/Index";

                          }
                      })

                  }

                  else {
                      alert("Data Saved Failed");
                  }

              },
              error: function () {
                  alert('Something went wrong!');
              }

          });



      }




    </script>




}
