@model IEnumerable<POSApplication.Models.Secu_User>
@using POSApplication.Helper

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    POSApplication.Models.SCMSContext db = new POSApplication.Models.SCMSContext();

}

<div class="panel panel-flat">
    <div class="panel-heading">
        <h5 class="panel-title "><i class="icon-task position-left"></i>Users List</h5><hr />
        <div class="heading-elements">
            <ul class="icons-list">
                <li><a data-action="collapse"></a></li>
                <li><a data-action="reload"></a></li>
            </ul>
        </div>
    </div>

    <div class="panel-body">
        <p>
            @Html.ActionLink("Create", "Create", null, new { @class = "btn btn-success" })
        </p>
        <table class="table table-responsive table-bordered  datatable-show-all">
            <thead>
                <tr class="bg-blue-700">
                    <th  class="col-lg-2">
                        @Html.DisplayNameFor(model => model.UserName)
                    </th>
                    <th class="col-lg-1">
                        @*@Html.DisplayNameFor(model => model.RoleId)*@
                        Role
                    </th>
                    <th class="col-lg-1">
                        @*@Html.DisplayNameFor(model => model.IsAdmin)*@
                        Admin
                    </th>
                    <th class="col-lg-1">
                        @*@Html.DisplayNameFor(model => model.UserStatus)*@
                        Status
                    </th>
                    <th class="col-lg-2">
                        Company
                    </th>
                    <th class="col-lg-2">
                        @Html.DisplayNameFor(model => model.LastLoginDate)
                    </th>
                    @*<th class="col-lg-2">
                        Invalid Attempt
                    </th>*@

                    <th class="col-lg-2"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        <td>
                            @{
                                var roleCheck = db.Secu_Role.FirstOrDefault(x => x.Id == item.RoleId);
                                var roleName = "";

                                if (roleName == null)
                                {
                                    roleName = "";
                                }
                                else
                                {
                                    roleName = roleCheck.Name;
                                }
                            }
                            <label>@roleName</label>
                        </td>
                        <td align="center">
                            @Html.DisplayFor(modelItem => item.IsAdmin)
                        </td>
                        <td align="center">
                            @{ 
                                if(item.UserStatus == "1")
                                {
                                   <span class="badge badge-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge badge-warning">Inactive</span>
                                }
                            }
                            @*@Html.DisplayFor(modelItem => item.UserStatus)*@
                        </td>
                        <td>
                            
                        </td>
                        <td>
                            @NullHelper.GetPrettyDate(DateTime.Now.AddMinutes(-(DateTime.Now.Subtract((item.LastLoginDate ?? DateTime.Now)).TotalMinutes)))
                            @*@item.LastLoginDate*@
                        </td>
                        @*<td>
                            @Html.DisplayFor(modelItem => item.InvalidAttempt)
                        </td>*@
                        <td>
                            @Html.ActionLink(" ", "Edit", new { Id = item.Id }, new { @class = "btn btn-xs text-info  icon-pencil4", @title = "Edit" })
                            @*@Html.ActionLink(" ", "Details", new { Id = item.Id }, new { @class = "btn btn-xs text-info  icon-file-text2", @title = "Details" })*@
                            <a class="btn btn-xs text-danger icon-cross2" title="Delete" href="javascript:deleteFunction(@item.Id)"></a>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>



@*<script src="~/Scripts/dataTable/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTable/datatables_advanced.js"></script>*@

@section scripts
{
    @*@Scripts.Render("~/bundles/jqueryval")*@
   
    <script>
        //$(".select2").select2();

        function deleteFunction(Id) {
            var Con = confirm("are you sure want to delete this ?");
            if (Con == true) {
                $.ajax({
                    url: "/Secu_User/DeleteItem",
                    type: "post",
                    data: {
                        Id: Id
                    },
                    dataType: "json",

                    success: function (flag) {
                        console.log(flag);

                        if (flag.flag == true) {
                            alert("Successfully deleted !");
                            window.location = "/Secu_User/Index";
                        } else {
                            alert(flag.message);
                        }
                    },

                    error: function (xhr) {
                        alert('error');

                    }


                });
            }

        }
    </script>
}


