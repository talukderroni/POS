@model POSApplication.Models.Secu_User
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">User Information</h5>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.UserStatus, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("UserStatus", null, "", htmlAttributes: new { @class = "form-control select2 input-xs" })
                                @Html.ValidationMessageFor(model => model.UserStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.LastLoginDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBox("LastLoginDate", null, new { @class = "form-control", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.LastLoginDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.UserFullName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.UserFullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserFullName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("RoleId", null, "", htmlAttributes: new { @class = "form-control select2 input-xs" })
                                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.IsAdmin, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.CheckBoxFor(model => model.IsAdmin, new { @class = "IsAdmin" })
                                @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-4">
                        <div class="form-group form-group-xs">
                            @Html.LabelFor(model => model.CompanyUnitId, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownList("CompanyUnitId", null, "", htmlAttributes: new { @class = "form-control select2 input-xs" })
                                @Html.ValidationMessageFor(model => model.CompanyUnitId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@
                </div>
            </div>
        }

    </div>
</div>
<div class="form-group" style="padding-top:20px;">
    @using (Html.BeginForm("ImageUploadForSave", "Secu_User", FormMethod.Post, new { enctype = "multipart/form-data", @id = "myform" }))
            {
        <div class="col-lg-3">
            <input type="hidden" value="" id="UId" name="UId" />
            @*<div class="col-lg-2">Upload Photo</div>*@
            <div class="col-lg-3">
                <input type="file" name="postedFiles" id="postedFiles" />
            </div>
        </div>
       
        @*<input type="file" name="postedFiles" id="postedFiles" multiple="multiple" />*@ @*For uploading multiple files*@
      
        <input type="submit" value="Upload" style="visibility:hidden;" id="submit" class="btn-primary" />
    }
</div>

<div class="panel panel-primary panel-bordered">

    <div class="panel-body">
        <div class="table-responsive">
            <table class="table table-bordered table-xxs">
                <tbody>
                    <tr>
                        <td class="col-lg-2">Password</td>
                        <td class="col-lg-5"><input type="password" id="Password" name="Password" class="form-control input-xs" /></td>
                        <td class="col-lg-5">&nbsp;</td>
                    </tr>
                    <tr>
                        <td class="col-lg-2">Re-Type Password</td>
                        <td class="col-lg-5"><input type="password" id="RePassword" name="RePassword" class="form-control input-xs" /></td>
                        <td class="col-lg-5">&nbsp;</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>


<div class="panel panel-primary panel-bordered">
    <div class="panel-body">
        <div class="form-group">
            <div class="col-md-12">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                <button type="button" class="btn btn-success" id="saveState">Save <i class="icon-arrow-right14 position-right"></i></button>
            </div>
        </div>

    </div>
</div>



@section Scripts {


    <script type="text/javascript">

        function RebindDatePicker() {
            $('.datepicker').datepicker("destroy");
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                todayHighlight: true,
                todayBtn: true,
                autoclose: true
            });

        }

        $(document).ready(function () {
            //$('body').addClass("sidebar-xs");
            $(".select2").select2();
            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                todayHighlight: true,
                todayBtn: true,
                autoclose: true
            });
            // jquery validator bug fix using moment
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "DD/MM/YYYY", true).isValid();
            }

        });


        $('#RePassword').change(function () {
            var passs = $('#Password').val();
            var rePass = $(this).val();

            if (passs != rePass) {
                alert("Password doesn't match!");
                $(this).val("");
            }
        });

        $('#Phone').change(function () {
            var Phn = $('#Phone').val();
            var valid = /\(?([0-9]{3})\)?([ .-]?)([0-9]{4})\2([0-9]{4})/.test(Phn);
            if (!valid || Phn.length != 11) {
                alert('Please enter valid Phone Number!');
            }
        });



        $('#saveState').click(function () {

            if ($.trim($('#UserName').val()) === "") {
                alert('UserName required');
                $('#UserName').focus();
            }
            else if ($.trim($('#UserStatus').val()) === "") {
                alert('User Status required');
                $('#UserStatus').focus();
            }
            else if ($.trim($('#UserFullName').val()) === "") {
                alert('Full Name required');
                $('#UserFullName').focus();
            }
            else if ($.trim($('#Phone').val()) === "") {
                alert('Phone No. required');
                $('#Phone').focus();
            }
            else if ($('#Phone').val().length != 11) {
                alert('Please enter valid Phone Number!');
                $('#Phone').focus();
            }
            else if ($.trim($('#RoleId').val()) === "") {
                alert('Role required');
                $('#RoleId').focus();
            }
            else if ($.trim($('#Password').val()) === "") {
                alert('Password required');
                $('#Password').focus();
            }
            else if ($.trim($('#Password').val()) != "" && $('#RePassword').val == "") {
                alert("Password don't match!");
                $('#RePassword').focus();
            }
            else {
                SaveUserData();
            }

        });

        function SaveUserData() {

            $("#saveState").attr("disabled", "disabled");


            var UserName = $.trim($('#UserName').val());
            var UserStatus = $('#UserStatus').val();
            var UserFullName = $('#UserFullName').val();
            var Phone = $('#Phone').val();
            var Email = $('#Email').val();
            var Password = $('#Password').val();
            var RoleId = $('#RoleId').val();
      
            var IsAdmin = 0;
            if ($('#IsAdmin').is(":checked")) {
                IsAdmin = 1;
            }
            else {
                IsAdmin = 0;
            }




            Secu_Users = JSON.stringify({
                Id: 0,
                UserName: UserName,
                UserStatus: UserStatus,
                UserFullName: UserFullName,
                Phone: Phone,
                Email:Email,
                Password: Password,
                RoleId: RoleId,
                IsAdmin: IsAdmin,
               
            });


            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '/Secu_User/SaveUser',
                data: Secu_Users,
                success: function (result) {
                    console.log(result);
                    $("#saveState").removeAttr("disabled");
                    if (result.flag == true) {
                      
                      
                        $('#submit').click();

                        alert("Record save successfully!");
                        
                    }
                    else {
                        alert(result.message);
                    }

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Error: ' + textStatus + ' - ' + errorThrown);
                    $("#saveState").removeAttr("disabled");
                }
            });

        }


    </script>
}
